version: '2'
services:

  # cassandra-1:
  #   hostname: cassandra-1
  #   image: cassandra:latest
  #   command: /bin/bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
  #   expose:
  #     - 7000
  #     - 7001
  #     - 7199
  #     - 9042
  #     - 9160
  #   # volumes: # uncomment if you desire mounts, also uncomment cluster.sh
  #   #   - ./data/cassandra-1:/var/lib/cassandra:rw

  # cassandra-2:
  #   hostname: cassandra-2
  #   image: cassandra:latest
  #   command: /bin/bash -c "sleep 30 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
  #   environment:
  #     - CASSANDRA_SEEDS=cassandra-1
  #   links:
  #     - cassandra-1
  #   expose:
  #     - 7000
  #     - 7001
  #     - 7199
  #     - 9042
  #     - 9160
  #   # volumes: # uncomment if you desire mounts, also uncomment cluster.sh
  # #   - ./data/cassandra-2:/var/lib/cassandra:rw
  mongodb-primary:

    # Give it a name
    container_name: mongodb_primary_container
    # https://hub.docker.com/r/alexpunct/mongo/
    image: mongo
    #command: mongod --smallfiles --replSet bigdaddy
    hostname: "127.0.0.1"
    #volumes:
     #- ./p:/data
    ports:
      - "27017:27017"
    # We use mongostorage data volume and we will use the /data/db path for the database inside the container
    # volumes:
    #   - mongodbdata:/data/db
    # Expose a MongoDB port to connect to, defined by the MONGODB_EXPOSED_PORT environment variable
    # and map this port to the 27017 internal port which is what MongoDB uses
    # ports:
    #   - "${MONGODB_EXPOSED_PORT}:27017"
    # Passing environment variables from the host to the container.
    # Our container expects the following variables (as explained here: https://hub.docker.com/r/alexpunct/mongo/)
    environment:
      MONGODB_ADMIN_USER: $MONGODB_ADMIN_USER
      MONGODB_ADMIN_PASS: $MONGODB_ADMIN_PASS
      MONGODB_APPLICATION_DATABASE: $MONGODB_APPLICATION_DATABASE
      MONGODB_APPLICATION_USER: $MONGODB_APPLICATION_USER
      MONGODB_APPLICATION_PASS: $MONGODB_APPLICATION_PASS

  # elasticsearch:

  #   image: blacktop/elastic-stack
  #   container_name: elasticstack
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"


  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1

  #   volumes:
  #     - ./esdata1:/usr/share/elasticsearch/data

  #   ports:
  #     - 9200:9200
  #     - 80:80
  # ansible:
  #   image: ansible/centos7-ansible
  # # Define a Telegraf service
  telegraf:
    image: telegraf
    environment:
      # INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_HOST: "influxdb"
      INFLUXDB_PORT: "8086"
    volumes:
      #- /home/cent/SC/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /home/cent/SC/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    links:
      - influxdb
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
  # Define an InfluxDB service
  influxdb:
    image: influxdb
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
  # Define a Chronograf service
  chronograf:
    image: chronograf
    environment:
      INFLUXDB_URL: http://influxdb:8086
      KAPACITOR_URL: http://kapacitor:9092
    ports:
      - "8888:8888"
    links:
      - influxdb
      - kapacitor

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    # environment:
    #   INFLUXDB_URL: http://influxdb:8086
    #   KAPACITOR_URL: http://kapacitor:9092
    ports:
      - "3000:3000"
    links:
      - influxdb
      - kapacitor
  # Define a Kapacitor service
  kapacitor:
    image: kapacitor
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    links:
      - influxdb
    ports:
      - "9092:9092"
  # Define a service for using the influx CLI tool.
  # docker-compose run influxdb-cli
  influxdb-cli:
    image: influxdb
    entrypoint:
      - influx
      - -host
      - influxdb
    links:
      - influxdb
  # Define a service for using the kapacitor CLI tool.
  # docker-compose run kapacitor-cli
  kapacitor-cli:
    image: kapacitor
    entrypoint: bash
    environment:
      KAPACITOR_URL: http://kapacitor:9092
    links:
      - kapacitor

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    hostname: localhost
    ports:
      - 5672:5672